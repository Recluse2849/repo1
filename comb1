class Solution:
    def combine(self, n: int, k: int) -> list[list[int]]:
        res = []
        path = []
        def backtrack(n:int,k:int,interstart:int):
            if len(path) == k:
                res.append(path[:])
                return 
            for i in range(interstart, n+1):
                path.append(i)
                backtrack(n,k,i+1)
                path.pop()
        backtrack(n,k,1)
        return res    
        print(res)
        # this is the second version
        # lets commit to the github
newSolution = Solution()
newSolution.combine(3,2)
